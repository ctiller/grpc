#include <stdlib.h>

#include <cstddef>
#include <cstdint>
// max=124 unique=82 flat=656 nested=1312
static const uint8_t g_emit_buffer_0[82] = {
    48,  49,  50,  97,  99,  101, 105, 111, 115, 116, 32,  37,  45,  46,
    47,  51,  52,  53,  54,  55,  56,  57,  61,  65,  95,  98,  100, 102,
    103, 104, 108, 109, 110, 112, 114, 117, 58,  66,  67,  68,  69,  70,
    71,  72,  73,  74,  75,  76,  77,  78,  79,  80,  81,  82,  83,  84,
    85,  86,  87,  89,  106, 107, 113, 118, 119, 120, 121, 122, 38,  42,
    44,  59,  88,  90,  33,  34,  40,  41,  63,  39,  43,  124};
inline uint8_t GetEmitBuffer0(size_t i) { return g_emit_buffer_0[i]; }
// max=3575 unique=85 flat=32768 nested=17744
// monotonic increasing
static const uint8_t g_emit_op_0_outer[2048] = {
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  5,  5,  5,
    5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
    5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
    5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
    5,  5,  5,  5,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,
    6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,
    6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,
    6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  7,  7,  7,  7,  7,  7,  7,  7,
    7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,
    7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,
    7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8,
    8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
    8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
    8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
    8,  8,  8,  8,  8,  8,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,
    9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,
    9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,
    9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  10, 10, 10, 10, 10, 10,
    10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
    10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13,
    13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
    17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
    17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19,
    19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
    19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20,
    20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
    20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22,
    22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
    22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23,
    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
    23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25,
    25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
    25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26,
    26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
    26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
    27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
    28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
    28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29,
    29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
    29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
    30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
    30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
    31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32,
    32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
    32, 32, 32, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
    33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
    33, 33, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
    34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 35, 35, 35, 35,
    35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
    35, 35, 35, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
    36, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
    37, 37, 37, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
    39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 40, 40,
    40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 41, 41, 41, 41, 41, 41,
    41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 42, 42, 42, 42, 42, 42, 42, 42, 42,
    42, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
    43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
    44, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 46, 46,
    46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 47, 47, 47, 47, 47,
    47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 48,
    48, 48, 48, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
    49, 49, 49, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50,
    50, 50, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 52,
    52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 53, 53, 53, 53,
    53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 54,
    54, 54, 54, 54, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
    55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
    58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59,
    59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 60,
    60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 61,
    61, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
    62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
    63, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 65, 65,
    65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 66, 66, 66, 66,
    66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 67, 67, 67, 67, 67, 67, 67, 67,
    67, 67, 67, 67, 67, 67, 67, 67, 68, 68, 68, 68, 68, 68, 68, 68, 69, 69, 69,
    69, 69, 69, 69, 69, 70, 70, 70, 70, 70, 70, 70, 70, 71, 71, 71, 71, 71, 71,
    71, 71, 72, 72, 72, 72, 72, 72, 72, 72, 73, 73, 73, 73, 73, 73, 73, 73, 74,
    74, 75, 75, 76, 76, 77, 77, 78, 78, 79, 80, 81, 82, 83, 84};
static const uint16_t g_emit_op_0_inner[85] = {
    5,    49,   93,   137,  181,  225,  269,  313,  357,  401,  446,
    490,  534,  578,  622,  666,  710,  754,  798,  842,  886,  930,
    974,  1018, 1062, 1106, 1150, 1194, 1238, 1282, 1326, 1370, 1414,
    1458, 1502, 1546, 1591, 1635, 1679, 1723, 1767, 1811, 1855, 1899,
    1943, 1987, 2031, 2075, 2119, 2163, 2207, 2251, 2295, 2339, 2383,
    2427, 2471, 2515, 2559, 2603, 2647, 2691, 2735, 2779, 2823, 2867,
    2911, 2955, 3000, 3044, 3088, 3132, 3176, 3220, 3266, 3310, 3354,
    3398, 3442, 3487, 3531, 3575, 22,   33,   44};
inline uint16_t GetEmitOp0(size_t i) {
  return g_emit_op_0_inner[g_emit_op_0_outer[i]];
}
// max=124 unique=84 flat=15920 nested=16592
static const uint8_t g_emit_buffer_1[1990] = {
    48,  48,  48,  49,  48,  50,  48,  97,  48,  99,  48,  101, 48,  105, 48,
    111, 48,  115, 48,  116, 48,  32,  48,  37,  48,  45,  48,  46,  48,  47,
    48,  51,  48,  52,  48,  53,  48,  54,  48,  55,  48,  56,  48,  57,  48,
    61,  48,  65,  48,  95,  48,  98,  48,  100, 48,  102, 48,  103, 48,  104,
    48,  108, 48,  109, 48,  110, 48,  112, 48,  114, 48,  117, 48,  58,  48,
    66,  48,  67,  48,  68,  48,  69,  48,  70,  48,  71,  48,  72,  48,  73,
    48,  74,  48,  75,  48,  76,  48,  77,  48,  78,  48,  79,  48,  80,  48,
    81,  48,  82,  48,  83,  48,  84,  48,  85,  48,  86,  48,  87,  48,  89,
    48,  106, 48,  107, 48,  113, 48,  118, 48,  119, 48,  120, 48,  121, 48,
    122, 49,  49,  49,  50,  49,  97,  49,  99,  49,  101, 49,  105, 49,  111,
    49,  115, 49,  116, 49,  32,  49,  37,  49,  45,  49,  46,  49,  47,  49,
    51,  49,  52,  49,  53,  49,  54,  49,  55,  49,  56,  49,  57,  49,  61,
    49,  65,  49,  95,  49,  98,  49,  100, 49,  102, 49,  103, 49,  104, 49,
    108, 49,  109, 49,  110, 49,  112, 49,  114, 49,  117, 49,  58,  49,  66,
    49,  67,  49,  68,  49,  69,  49,  70,  49,  71,  49,  72,  49,  73,  49,
    74,  49,  75,  49,  76,  49,  77,  49,  78,  49,  79,  49,  80,  49,  81,
    49,  82,  49,  83,  49,  84,  49,  85,  49,  86,  49,  87,  49,  89,  49,
    106, 49,  107, 49,  113, 49,  118, 49,  119, 49,  120, 49,  121, 49,  122,
    50,  50,  50,  97,  50,  99,  50,  101, 50,  105, 50,  111, 50,  115, 50,
    116, 50,  32,  50,  37,  50,  45,  50,  46,  50,  47,  50,  51,  50,  52,
    50,  53,  50,  54,  50,  55,  50,  56,  50,  57,  50,  61,  50,  65,  50,
    95,  50,  98,  50,  100, 50,  102, 50,  103, 50,  104, 50,  108, 50,  109,
    50,  110, 50,  112, 50,  114, 50,  117, 50,  58,  50,  66,  50,  67,  50,
    68,  50,  69,  50,  70,  50,  71,  50,  72,  50,  73,  50,  74,  50,  75,
    50,  76,  50,  77,  50,  78,  50,  79,  50,  80,  50,  81,  50,  82,  50,
    83,  50,  84,  50,  85,  50,  86,  50,  87,  50,  89,  50,  106, 50,  107,
    50,  113, 50,  118, 50,  119, 50,  120, 50,  121, 50,  122, 97,  97,  97,
    99,  97,  101, 97,  105, 97,  111, 97,  115, 97,  116, 97,  32,  97,  37,
    97,  45,  97,  46,  97,  47,  97,  51,  97,  52,  97,  53,  97,  54,  97,
    55,  97,  56,  97,  57,  97,  61,  97,  65,  97,  95,  97,  98,  97,  100,
    97,  102, 97,  103, 97,  104, 97,  108, 97,  109, 97,  110, 97,  112, 97,
    114, 97,  117, 97,  58,  97,  66,  97,  67,  97,  68,  97,  69,  97,  70,
    97,  71,  97,  72,  97,  73,  97,  74,  97,  75,  97,  76,  97,  77,  97,
    78,  97,  79,  97,  80,  97,  81,  97,  82,  97,  83,  97,  84,  97,  85,
    97,  86,  97,  87,  97,  89,  97,  106, 97,  107, 97,  113, 97,  118, 97,
    119, 97,  120, 97,  121, 97,  122, 99,  99,  99,  101, 99,  105, 99,  111,
    99,  115, 99,  116, 99,  32,  99,  37,  99,  45,  99,  46,  99,  47,  99,
    51,  99,  52,  99,  53,  99,  54,  99,  55,  99,  56,  99,  57,  99,  61,
    99,  65,  99,  95,  99,  98,  99,  100, 99,  102, 99,  103, 99,  104, 99,
    108, 99,  109, 99,  110, 99,  112, 99,  114, 99,  117, 99,  58,  99,  66,
    99,  67,  99,  68,  99,  69,  99,  70,  99,  71,  99,  72,  99,  73,  99,
    74,  99,  75,  99,  76,  99,  77,  99,  78,  99,  79,  99,  80,  99,  81,
    99,  82,  99,  83,  99,  84,  99,  85,  99,  86,  99,  87,  99,  89,  99,
    106, 99,  107, 99,  113, 99,  118, 99,  119, 99,  120, 99,  121, 99,  122,
    101, 101, 101, 105, 101, 111, 101, 115, 101, 116, 101, 32,  101, 37,  101,
    45,  101, 46,  101, 47,  101, 51,  101, 52,  101, 53,  101, 54,  101, 55,
    101, 56,  101, 57,  101, 61,  101, 65,  101, 95,  101, 98,  101, 100, 101,
    102, 101, 103, 101, 104, 101, 108, 101, 109, 101, 110, 101, 112, 101, 114,
    101, 117, 101, 58,  101, 66,  101, 67,  101, 68,  101, 69,  101, 70,  101,
    71,  101, 72,  101, 73,  101, 74,  101, 75,  101, 76,  101, 77,  101, 78,
    101, 79,  101, 80,  101, 81,  101, 82,  101, 83,  101, 84,  101, 85,  101,
    86,  101, 87,  101, 89,  101, 106, 101, 107, 101, 113, 101, 118, 101, 119,
    101, 120, 101, 121, 101, 122, 105, 105, 105, 111, 105, 115, 105, 116, 105,
    32,  105, 37,  105, 45,  105, 46,  105, 47,  105, 51,  105, 52,  105, 53,
    105, 54,  105, 55,  105, 56,  105, 57,  105, 61,  105, 65,  105, 95,  105,
    98,  105, 100, 105, 102, 105, 103, 105, 104, 105, 108, 105, 109, 105, 110,
    105, 112, 105, 114, 105, 117, 105, 58,  105, 66,  105, 67,  105, 68,  105,
    69,  105, 70,  105, 71,  105, 72,  105, 73,  105, 74,  105, 75,  105, 76,
    105, 77,  105, 78,  105, 79,  105, 80,  105, 81,  105, 82,  105, 83,  105,
    84,  105, 85,  105, 86,  105, 87,  105, 89,  105, 106, 105, 107, 105, 113,
    105, 118, 105, 119, 105, 120, 105, 121, 105, 122, 111, 111, 111, 115, 111,
    116, 111, 32,  111, 37,  111, 45,  111, 46,  111, 47,  111, 51,  111, 52,
    111, 53,  111, 54,  111, 55,  111, 56,  111, 57,  111, 61,  111, 65,  111,
    95,  111, 98,  111, 100, 111, 102, 111, 103, 111, 104, 111, 108, 111, 109,
    111, 110, 111, 112, 111, 114, 111, 117, 111, 58,  111, 66,  111, 67,  111,
    68,  111, 69,  111, 70,  111, 71,  111, 72,  111, 73,  111, 74,  111, 75,
    111, 76,  111, 77,  111, 78,  111, 79,  111, 80,  111, 81,  111, 82,  111,
    83,  111, 84,  111, 85,  111, 86,  111, 87,  111, 89,  111, 106, 111, 107,
    111, 113, 111, 118, 111, 119, 111, 120, 111, 121, 111, 122, 115, 115, 115,
    116, 115, 32,  115, 37,  115, 45,  115, 46,  115, 47,  115, 51,  115, 52,
    115, 53,  115, 54,  115, 55,  115, 56,  115, 57,  115, 61,  115, 65,  115,
    95,  115, 98,  115, 100, 115, 102, 115, 103, 115, 104, 115, 108, 115, 109,
    115, 110, 115, 112, 115, 114, 115, 117, 115, 58,  115, 66,  115, 67,  115,
    68,  115, 69,  115, 70,  115, 71,  115, 72,  115, 73,  115, 74,  115, 75,
    115, 76,  115, 77,  115, 78,  115, 79,  115, 80,  115, 81,  115, 82,  115,
    83,  115, 84,  115, 85,  115, 86,  115, 87,  115, 89,  115, 106, 115, 107,
    115, 113, 115, 118, 115, 119, 115, 120, 115, 121, 115, 122, 116, 116, 116,
    32,  116, 37,  116, 45,  116, 46,  116, 47,  116, 51,  116, 52,  116, 53,
    116, 54,  116, 55,  116, 56,  116, 57,  116, 61,  116, 65,  116, 95,  116,
    98,  116, 100, 116, 102, 116, 103, 116, 104, 116, 108, 116, 109, 116, 110,
    116, 112, 116, 114, 116, 117, 116, 58,  116, 66,  116, 67,  116, 68,  116,
    69,  116, 70,  116, 71,  116, 72,  116, 73,  116, 74,  116, 75,  116, 76,
    116, 77,  116, 78,  116, 79,  116, 80,  116, 81,  116, 82,  116, 83,  116,
    84,  116, 85,  116, 86,  116, 87,  116, 89,  116, 106, 116, 107, 116, 113,
    116, 118, 116, 119, 116, 120, 116, 121, 116, 122, 32,  32,  32,  37,  32,
    45,  32,  46,  32,  47,  32,  51,  32,  52,  32,  53,  32,  54,  32,  55,
    32,  56,  32,  57,  32,  61,  32,  65,  32,  95,  32,  98,  32,  100, 32,
    102, 32,  103, 32,  104, 32,  108, 32,  109, 32,  110, 32,  112, 32,  114,
    32,  117, 37,  37,  37,  45,  37,  46,  37,  47,  37,  51,  37,  52,  37,
    53,  37,  54,  37,  55,  37,  56,  37,  57,  37,  61,  37,  65,  37,  95,
    37,  98,  37,  100, 37,  102, 37,  103, 37,  104, 37,  108, 37,  109, 37,
    110, 37,  112, 37,  114, 37,  117, 45,  45,  45,  46,  45,  47,  45,  51,
    45,  52,  45,  53,  45,  54,  45,  55,  45,  56,  45,  57,  45,  61,  45,
    65,  45,  95,  45,  98,  45,  100, 45,  102, 45,  103, 45,  104, 45,  108,
    45,  109, 45,  110, 45,  112, 45,  114, 45,  117, 46,  46,  46,  47,  46,
    51,  46,  52,  46,  53,  46,  54,  46,  55,  46,  56,  46,  57,  46,  61,
    46,  65,  46,  95,  46,  98,  46,  100, 46,  102, 46,  103, 46,  104, 46,
    108, 46,  109, 46,  110, 46,  112, 46,  114, 46,  117, 47,  47,  47,  51,
    47,  52,  47,  53,  47,  54,  47,  55,  47,  56,  47,  57,  47,  61,  47,
    65,  47,  95,  47,  98,  47,  100, 47,  102, 47,  103, 47,  104, 47,  108,
    47,  109, 47,  110, 47,  112, 47,  114, 47,  117, 51,  51,  51,  52,  51,
    53,  51,  54,  51,  55,  51,  56,  51,  57,  51,  61,  51,  65,  51,  95,
    51,  98,  51,  100, 51,  102, 51,  103, 51,  104, 51,  108, 51,  109, 51,
    110, 51,  112, 51,  114, 51,  117, 52,  52,  52,  53,  52,  54,  52,  55,
    52,  56,  52,  57,  52,  61,  52,  65,  52,  95,  52,  98,  52,  100, 52,
    102, 52,  103, 52,  104, 52,  108, 52,  109, 52,  110, 52,  112, 52,  114,
    52,  117, 53,  53,  53,  54,  53,  55,  53,  56,  53,  57,  53,  61,  53,
    65,  53,  95,  53,  98,  53,  100, 53,  102, 53,  103, 53,  104, 53,  108,
    53,  109, 53,  110, 53,  112, 53,  114, 53,  117, 54,  54,  54,  55,  54,
    56,  54,  57,  54,  61,  54,  65,  54,  95,  54,  98,  54,  100, 54,  102,
    54,  103, 54,  104, 54,  108, 54,  109, 54,  110, 54,  112, 54,  114, 54,
    117, 55,  55,  55,  56,  55,  57,  55,  61,  55,  65,  55,  95,  55,  98,
    55,  100, 55,  102, 55,  103, 55,  104, 55,  108, 55,  109, 55,  110, 55,
    112, 55,  114, 55,  117, 56,  56,  56,  57,  56,  61,  56,  65,  56,  95,
    56,  98,  56,  100, 56,  102, 56,  103, 56,  104, 56,  108, 56,  109, 56,
    110, 56,  112, 56,  114, 56,  117, 57,  57,  57,  61,  57,  65,  57,  95,
    57,  98,  57,  100, 57,  102, 57,  103, 57,  104, 57,  108, 57,  109, 57,
    110, 57,  112, 57,  114, 57,  117, 61,  61,  61,  65,  61,  95,  61,  98,
    61,  100, 61,  102, 61,  103, 61,  104, 61,  108, 61,  109, 61,  110, 61,
    112, 61,  114, 61,  117, 65,  65,  65,  95,  65,  98,  65,  100, 65,  102,
    65,  103, 65,  104, 65,  108, 65,  109, 65,  110, 65,  112, 65,  114, 65,
    117, 95,  95,  95,  98,  95,  100, 95,  102, 95,  103, 95,  104, 95,  108,
    95,  109, 95,  110, 95,  112, 95,  114, 95,  117, 98,  98,  98,  100, 98,
    102, 98,  103, 98,  104, 98,  108, 98,  109, 98,  110, 98,  112, 98,  114,
    98,  117, 100, 100, 100, 102, 100, 103, 100, 104, 100, 108, 100, 109, 100,
    110, 100, 112, 100, 114, 100, 117, 102, 102, 102, 103, 102, 104, 102, 108,
    102, 109, 102, 110, 102, 112, 102, 114, 102, 117, 103, 103, 103, 104, 103,
    108, 103, 109, 103, 110, 103, 112, 103, 114, 103, 117, 104, 104, 104, 108,
    104, 109, 104, 110, 104, 112, 104, 114, 104, 117, 108, 108, 108, 109, 108,
    110, 108, 112, 108, 114, 108, 117, 109, 109, 109, 110, 109, 112, 109, 114,
    109, 117, 110, 110, 110, 112, 110, 114, 110, 117, 112, 112, 112, 114, 112,
    117, 114, 114, 114, 117, 117, 32,  122, 48,  38,  42,  44,  59,  88,  90,
    33,  34,  40,  41,  63,  39,  43,  124, 35,  62};
inline uint8_t GetEmitBuffer1(size_t i) { return g_emit_buffer_1[i]; }
// max=143232 unique=2024 flat=131072 nested=130304
// monotonic increasing
static const uint16_t g_emit_op_1_outer[4096] = {
    0,    0,    0,    0,    1,    1,    1,    1,    2,    2,    2,    2,
    3,    3,    3,    3,    4,    4,    4,    4,    5,    5,    5,    5,
    6,    6,    6,    6,    7,    7,    7,    7,    8,    8,    8,    8,
    9,    9,    9,    9,    10,   10,   11,   11,   12,   12,   13,   13,
    14,   14,   15,   15,   16,   16,   17,   17,   18,   18,   19,   19,
    20,   20,   21,   21,   22,   22,   23,   23,   24,   24,   25,   25,
    26,   26,   27,   27,   28,   28,   29,   29,   30,   30,   31,   31,
    32,   32,   33,   33,   34,   34,   35,   35,   36,   37,   38,   39,
    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
    52,   53,   54,   55,   56,   57,   58,   59,   60,   61,   62,   63,
    64,   65,   66,   67,   68,   68,   68,   68,   69,   69,   69,   69,
    70,   70,   70,   70,   71,   71,   71,   71,   72,   72,   72,   72,
    73,   73,   73,   73,   74,   74,   74,   74,   75,   75,   75,   75,
    76,   76,   76,   76,   77,   77,   77,   77,   78,   78,   78,   78,
    79,   79,   80,   80,   81,   81,   82,   82,   83,   83,   84,   84,
    85,   85,   86,   86,   87,   87,   88,   88,   89,   89,   90,   90,
    91,   91,   92,   92,   93,   93,   94,   94,   95,   95,   96,   96,
    97,   97,   98,   98,   99,   99,   100,  100,  101,  101,  102,  102,
    103,  103,  104,  104,  105,  106,  107,  108,  109,  110,  111,  112,
    113,  114,  115,  116,  117,  118,  119,  120,  121,  122,  123,  124,
    125,  126,  127,  128,  129,  130,  131,  132,  133,  134,  135,  136,
    137,  137,  137,  137,  138,  138,  138,  138,  139,  139,  139,  139,
    140,  140,  140,  140,  141,  141,  141,  141,  142,  142,  142,  142,
    143,  143,  143,  143,  144,  144,  144,  144,  145,  145,  145,  145,
    146,  146,  146,  146,  147,  147,  147,  147,  148,  148,  149,  149,
    150,  150,  151,  151,  152,  152,  153,  153,  154,  154,  155,  155,
    156,  156,  157,  157,  158,  158,  159,  159,  160,  160,  161,  161,
    162,  162,  163,  163,  164,  164,  165,  165,  166,  166,  167,  167,
    168,  168,  169,  169,  170,  170,  171,  171,  172,  172,  173,  173,
    174,  175,  176,  177,  178,  179,  180,  181,  182,  183,  184,  185,
    186,  187,  188,  189,  190,  191,  192,  193,  194,  195,  196,  197,
    198,  199,  200,  201,  202,  203,  204,  205,  206,  206,  206,  206,
    207,  207,  207,  207,  208,  208,  208,  208,  209,  209,  209,  209,
    210,  210,  210,  210,  211,  211,  211,  211,  212,  212,  212,  212,
    213,  213,  213,  213,  214,  214,  214,  214,  215,  215,  215,  215,
    216,  216,  216,  216,  217,  217,  218,  218,  219,  219,  220,  220,
    221,  221,  222,  222,  223,  223,  224,  224,  225,  225,  226,  226,
    227,  227,  228,  228,  229,  229,  230,  230,  231,  231,  232,  232,
    233,  233,  234,  234,  235,  235,  236,  236,  237,  237,  238,  238,
    239,  239,  240,  240,  241,  241,  242,  242,  243,  244,  245,  246,
    247,  248,  249,  250,  251,  252,  253,  254,  255,  256,  257,  258,
    259,  260,  261,  262,  263,  264,  265,  266,  267,  268,  269,  270,
    271,  272,  273,  274,  275,  275,  275,  275,  276,  276,  276,  276,
    277,  277,  277,  277,  278,  278,  278,  278,  279,  279,  279,  279,
    280,  280,  280,  280,  281,  281,  281,  281,  282,  282,  282,  282,
    283,  283,  283,  283,  284,  284,  284,  284,  285,  285,  285,  285,
    286,  286,  287,  287,  288,  288,  289,  289,  290,  290,  291,  291,
    292,  292,  293,  293,  294,  294,  295,  295,  296,  296,  297,  297,
    298,  298,  299,  299,  300,  300,  301,  301,  302,  302,  303,  303,
    304,  304,  305,  305,  306,  306,  307,  307,  308,  308,  309,  309,
    310,  310,  311,  311,  312,  313,  314,  315,  316,  317,  318,  319,
    320,  321,  322,  323,  324,  325,  326,  327,  328,  329,  330,  331,
    332,  333,  334,  335,  336,  337,  338,  339,  340,  341,  342,  343,
    344,  344,  344,  344,  345,  345,  345,  345,  346,  346,  346,  346,
    347,  347,  347,  347,  348,  348,  348,  348,  349,  349,  349,  349,
    350,  350,  350,  350,  351,  351,  351,  351,  352,  352,  352,  352,
    353,  353,  353,  353,  354,  354,  354,  354,  355,  355,  356,  356,
    357,  357,  358,  358,  359,  359,  360,  360,  361,  361,  362,  362,
    363,  363,  364,  364,  365,  365,  366,  366,  367,  367,  368,  368,
    369,  369,  370,  370,  371,  371,  372,  372,  373,  373,  374,  374,
    375,  375,  376,  376,  377,  377,  378,  378,  379,  379,  380,  380,
    381,  382,  383,  384,  385,  386,  387,  388,  389,  390,  391,  392,
    393,  394,  395,  396,  397,  398,  399,  400,  401,  402,  403,  404,
    405,  406,  407,  408,  409,  410,  411,  412,  413,  413,  413,  413,
    414,  414,  414,  414,  415,  415,  415,  415,  416,  416,  416,  416,
    417,  417,  417,  417,  418,  418,  418,  418,  419,  419,  419,  419,
    420,  420,  420,  420,  421,  421,  421,  421,  422,  422,  422,  422,
    423,  423,  423,  423,  424,  424,  425,  425,  426,  426,  427,  427,
    428,  428,  429,  429,  430,  430,  431,  431,  432,  432,  433,  433,
    434,  434,  435,  435,  436,  436,  437,  437,  438,  438,  439,  439,
    440,  440,  441,  441,  442,  442,  443,  443,  444,  444,  445,  445,
    446,  446,  447,  447,  448,  448,  449,  449,  450,  451,  452,  453,
    454,  455,  456,  457,  458,  459,  460,  461,  462,  463,  464,  465,
    466,  467,  468,  469,  470,  471,  472,  473,  474,  475,  476,  477,
    478,  479,  480,  481,  482,  482,  482,  482,  483,  483,  483,  483,
    484,  484,  484,  484,  485,  485,  485,  485,  486,  486,  486,  486,
    487,  487,  487,  487,  488,  488,  488,  488,  489,  489,  489,  489,
    490,  490,  490,  490,  491,  491,  491,  491,  492,  492,  492,  492,
    493,  493,  494,  494,  495,  495,  496,  496,  497,  497,  498,  498,
    499,  499,  500,  500,  501,  501,  502,  502,  503,  503,  504,  504,
    505,  505,  506,  506,  507,  507,  508,  508,  509,  509,  510,  510,
    511,  511,  512,  512,  513,  513,  514,  514,  515,  515,  516,  516,
    517,  517,  518,  518,  519,  520,  521,  522,  523,  524,  525,  526,
    527,  528,  529,  530,  531,  532,  533,  534,  535,  536,  537,  538,
    539,  540,  541,  542,  543,  544,  545,  546,  547,  548,  549,  550,
    551,  551,  551,  551,  552,  552,  552,  552,  553,  553,  553,  553,
    554,  554,  554,  554,  555,  555,  555,  555,  556,  556,  556,  556,
    557,  557,  557,  557,  558,  558,  558,  558,  559,  559,  559,  559,
    560,  560,  560,  560,  561,  561,  561,  561,  562,  562,  563,  563,
    564,  564,  565,  565,  566,  566,  567,  567,  568,  568,  569,  569,
    570,  570,  571,  571,  572,  572,  573,  573,  574,  574,  575,  575,
    576,  576,  577,  577,  578,  578,  579,  579,  580,  580,  581,  581,
    582,  582,  583,  583,  584,  584,  585,  585,  586,  586,  587,  587,
    588,  589,  590,  591,  592,  593,  594,  595,  596,  597,  598,  599,
    600,  601,  602,  603,  604,  605,  606,  607,  608,  609,  610,  611,
    612,  613,  614,  615,  616,  617,  618,  619,  620,  620,  620,  620,
    621,  621,  621,  621,  622,  622,  622,  622,  623,  623,  623,  623,
    624,  624,  624,  624,  625,  625,  625,  625,  626,  626,  626,  626,
    627,  627,  627,  627,  628,  628,  628,  628,  629,  629,  629,  629,
    630,  630,  630,  630,  631,  631,  632,  632,  633,  633,  634,  634,
    635,  635,  636,  636,  637,  637,  638,  638,  639,  639,  640,  640,
    641,  641,  642,  642,  643,  643,  644,  644,  645,  645,  646,  646,
    647,  647,  648,  648,  649,  649,  650,  650,  651,  651,  652,  652,
    653,  653,  654,  654,  655,  655,  656,  656,  657,  658,  659,  660,
    661,  662,  663,  664,  665,  666,  667,  668,  669,  670,  671,  672,
    673,  674,  675,  676,  677,  678,  679,  680,  681,  682,  683,  684,
    685,  686,  687,  688,  689,  689,  689,  689,  690,  690,  691,  691,
    692,  692,  693,  693,  694,  694,  695,  695,  696,  696,  697,  697,
    698,  698,  699,  699,  700,  701,  702,  703,  704,  705,  706,  707,
    708,  709,  710,  711,  712,  713,  714,  715,  716,  717,  718,  719,
    720,  721,  722,  723,  724,  725,  726,  726,  726,  726,  726,  726,
    726,  726,  726,  726,  726,  726,  726,  726,  726,  726,  726,  726,
    727,  727,  728,  728,  729,  729,  730,  730,  731,  731,  732,  732,
    733,  733,  734,  734,  735,  735,  736,  736,  737,  738,  739,  740,
    741,  742,  743,  744,  745,  746,  747,  748,  749,  750,  751,  752,
    753,  754,  755,  756,  757,  758,  759,  760,  761,  762,  763,  763,
    763,  763,  763,  763,  763,  763,  763,  763,  763,  763,  763,  763,
    763,  763,  763,  763,  764,  764,  765,  765,  766,  766,  767,  767,
    768,  768,  769,  769,  770,  770,  771,  771,  772,  772,  773,  773,
    774,  775,  776,  777,  778,  779,  780,  781,  782,  783,  784,  785,
    786,  787,  788,  789,  790,  791,  792,  793,  794,  795,  796,  797,
    798,  799,  800,  800,  800,  800,  800,  800,  800,  800,  800,  800,
    800,  800,  800,  800,  800,  800,  800,  800,  801,  801,  802,  802,
    803,  803,  804,  804,  805,  805,  806,  806,  807,  807,  808,  808,
    809,  809,  810,  810,  811,  812,  813,  814,  815,  816,  817,  818,
    819,  820,  821,  822,  823,  824,  825,  826,  827,  828,  829,  830,
    831,  832,  833,  834,  835,  836,  837,  837,  837,  837,  837,  837,
    837,  837,  837,  837,  837,  837,  837,  837,  837,  837,  837,  837,
    838,  838,  839,  839,  840,  840,  841,  841,  842,  842,  843,  843,
    844,  844,  845,  845,  846,  846,  847,  847,  848,  849,  850,  851,
    852,  853,  854,  855,  856,  857,  858,  859,  860,  861,  862,  863,
    864,  865,  866,  867,  868,  869,  870,  871,  872,  873,  874,  874,
    874,  874,  874,  874,  874,  874,  874,  874,  874,  874,  874,  874,
    874,  874,  874,  874,  875,  875,  876,  876,  877,  877,  878,  878,
    879,  879,  880,  880,  881,  881,  882,  882,  883,  883,  884,  884,
    885,  886,  887,  888,  889,  890,  891,  892,  893,  894,  895,  896,
    897,  898,  899,  900,  901,  902,  903,  904,  905,  906,  907,  908,
    909,  910,  911,  911,  911,  911,  911,  911,  911,  911,  911,  911,
    911,  911,  911,  911,  911,  911,  911,  911,  912,  912,  913,  913,
    914,  914,  915,  915,  916,  916,  917,  917,  918,  918,  919,  919,
    920,  920,  921,  921,  922,  923,  924,  925,  926,  927,  928,  929,
    930,  931,  932,  933,  934,  935,  936,  937,  938,  939,  940,  941,
    942,  943,  944,  945,  946,  947,  948,  948,  948,  948,  948,  948,
    948,  948,  948,  948,  948,  948,  948,  948,  948,  948,  948,  948,
    949,  949,  950,  950,  951,  951,  952,  952,  953,  953,  954,  954,
    955,  955,  956,  956,  957,  957,  958,  958,  959,  960,  961,  962,
    963,  964,  965,  966,  967,  968,  969,  970,  971,  972,  973,  974,
    975,  976,  977,  978,  979,  980,  981,  982,  983,  984,  985,  985,
    985,  985,  985,  985,  985,  985,  985,  985,  985,  985,  985,  985,
    985,  985,  985,  985,  986,  986,  987,  987,  988,  988,  989,  989,
    990,  990,  991,  991,  992,  992,  993,  993,  994,  994,  995,  995,
    996,  997,  998,  999,  1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
    1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
    1020, 1021, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
    1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1023, 1023, 1024, 1024,
    1025, 1025, 1026, 1026, 1027, 1027, 1028, 1028, 1029, 1029, 1030, 1030,
    1031, 1031, 1032, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
    1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
    1053, 1054, 1055, 1056, 1057, 1058, 1059, 1059, 1059, 1059, 1059, 1059,
    1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
    1060, 1060, 1061, 1061, 1062, 1062, 1063, 1063, 1064, 1064, 1065, 1065,
    1066, 1066, 1067, 1067, 1068, 1068, 1069, 1069, 1070, 1071, 1072, 1073,
    1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
    1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1096,
    1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096, 1096,
    1096, 1096, 1096, 1096, 1097, 1097, 1098, 1098, 1099, 1099, 1100, 1100,
    1101, 1101, 1102, 1102, 1103, 1103, 1104, 1104, 1105, 1105, 1106, 1106,
    1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
    1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
    1131, 1132, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133,
    1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1134, 1134, 1135, 1135,
    1136, 1136, 1137, 1137, 1138, 1138, 1139, 1139, 1140, 1140, 1141, 1141,
    1142, 1142, 1143, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
    1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
    1164, 1165, 1166, 1167, 1168, 1169, 1170, 1170, 1170, 1170, 1170, 1170,
    1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170,
    1171, 1171, 1172, 1172, 1173, 1173, 1174, 1174, 1175, 1175, 1176, 1176,
    1177, 1177, 1178, 1178, 1179, 1179, 1180, 1180, 1181, 1182, 1183, 1184,
    1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
    1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1207,
    1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207, 1207,
    1207, 1207, 1207, 1207, 1208, 1208, 1209, 1209, 1210, 1210, 1211, 1211,
    1212, 1212, 1213, 1213, 1214, 1214, 1215, 1215, 1216, 1216, 1217, 1217,
    1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
    1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
    1242, 1243, 1244, 1244, 1244, 1244, 1244, 1244, 1244, 1244, 1244, 1244,
    1244, 1244, 1244, 1244, 1244, 1244, 1244, 1244, 1245, 1245, 1246, 1246,
    1247, 1247, 1248, 1248, 1249, 1249, 1250, 1250, 1251, 1251, 1252, 1252,
    1253, 1253, 1254, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
    1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
    1275, 1276, 1277, 1278, 1279, 1280, 1281, 1281, 1281, 1281, 1281, 1281,
    1281, 1281, 1281, 1281, 1281, 1281, 1281, 1281, 1281, 1281, 1281, 1281,
    1282, 1282, 1283, 1283, 1284, 1284, 1285, 1285, 1286, 1286, 1287, 1287,
    1288, 1288, 1289, 1289, 1290, 1290, 1291, 1291, 1292, 1293, 1294, 1295,
    1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
    1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1318,
    1318, 1318, 1318, 1318, 1318, 1318, 1318, 1318, 1318, 1318, 1318, 1318,
    1318, 1318, 1318, 1318, 1319, 1319, 1320, 1320, 1321, 1321, 1322, 1322,
    1323, 1323, 1324, 1324, 1325, 1325, 1326, 1326, 1327, 1327, 1328, 1328,
    1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
    1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
    1353, 1354, 1355, 1355, 1355, 1355, 1355, 1355, 1355, 1355, 1355, 1355,
    1355, 1355, 1355, 1355, 1355, 1355, 1355, 1355, 1356, 1356, 1357, 1357,
    1358, 1358, 1359, 1359, 1360, 1360, 1361, 1361, 1362, 1362, 1363, 1363,
    1364, 1364, 1365, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
    1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
    1386, 1387, 1388, 1389, 1390, 1391, 1392, 1392, 1392, 1392, 1392, 1392,
    1392, 1392, 1392, 1392, 1392, 1392, 1392, 1392, 1392, 1392, 1392, 1392,
    1393, 1393, 1394, 1394, 1395, 1395, 1396, 1396, 1397, 1397, 1398, 1398,
    1399, 1399, 1400, 1400, 1401, 1401, 1402, 1402, 1403, 1404, 1405, 1406,
    1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
    1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1429,
    1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429, 1429,
    1429, 1429, 1429, 1429, 1430, 1430, 1431, 1431, 1432, 1432, 1433, 1433,
    1434, 1434, 1435, 1435, 1436, 1436, 1437, 1437, 1438, 1438, 1439, 1439,
    1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
    1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
    1464, 1465, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466,
    1466, 1466, 1466, 1466, 1466, 1466, 1466, 1466, 1467, 1467, 1468, 1468,
    1469, 1469, 1470, 1470, 1471, 1471, 1472, 1472, 1473, 1473, 1474, 1474,
    1475, 1475, 1476, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
    1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
    1497, 1498, 1499, 1500, 1501, 1502, 1503, 1503, 1503, 1503, 1503, 1503,
    1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503, 1503,
    1504, 1504, 1505, 1505, 1506, 1506, 1507, 1507, 1508, 1508, 1509, 1509,
    1510, 1510, 1511, 1511, 1512, 1512, 1513, 1513, 1514, 1515, 1516, 1517,
    1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
    1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1540,
    1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540,
    1540, 1540, 1540, 1540, 1541, 1541, 1542, 1542, 1543, 1543, 1544, 1544,
    1545, 1545, 1546, 1546, 1547, 1547, 1548, 1548, 1549, 1549, 1550, 1550,
    1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
    1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
    1575, 1576, 1577, 1577, 1577, 1577, 1577, 1577, 1577, 1577, 1577, 1577,
    1577, 1577, 1577, 1577, 1577, 1577, 1577, 1577, 1578, 1578, 1579, 1579,
    1580, 1580, 1581, 1581, 1582, 1582, 1583, 1583, 1584, 1584, 1585, 1585,
    1586, 1586, 1587, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
    1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
    1608, 1609, 1610, 1611, 1612, 1613, 1614, 1614, 1614, 1614, 1614, 1614,
    1614, 1614, 1614, 1614, 1614, 1614, 1614, 1614, 1614, 1614, 1614, 1614,
    1615, 1615, 1616, 1616, 1617, 1617, 1618, 1618, 1619, 1619, 1620, 1620,
    1621, 1621, 1622, 1622, 1623, 1623, 1624, 1624, 1625, 1626, 1627, 1628,
    1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
    1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1651,
    1651, 1651, 1651, 1651, 1651, 1651, 1651, 1651, 1651, 1651, 1651, 1651,
    1651, 1651, 1651, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
    1660, 1661, 1662, 1662, 1662, 1662, 1662, 1662, 1662, 1662, 1662, 1662,
    1662, 1662, 1662, 1662, 1662, 1662, 1662, 1662, 1662, 1662, 1662, 1662,
    1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1673,
    1673, 1673, 1673, 1673, 1673, 1673, 1673, 1673, 1673, 1673, 1673, 1673,
    1673, 1673, 1673, 1673, 1673, 1673, 1673, 1673, 1674, 1675, 1676, 1677,
    1678, 1679, 1680, 1681, 1682, 1683, 1684, 1684, 1684, 1684, 1684, 1684,
    1684, 1684, 1684, 1684, 1684, 1684, 1684, 1684, 1684, 1684, 1684, 1684,
    1684, 1684, 1684, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
    1693, 1694, 1695, 1695, 1695, 1695, 1695, 1695, 1695, 1695, 1695, 1695,
    1695, 1695, 1695, 1695, 1695, 1695, 1695, 1695, 1695, 1695, 1695, 1695,
    1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1706,
    1706, 1706, 1706, 1706, 1706, 1706, 1706, 1706, 1706, 1706, 1706, 1706,
    1706, 1706, 1706, 1706, 1706, 1706, 1706, 1706, 1707, 1708, 1709, 1710,
    1711, 1712, 1713, 1714, 1715, 1716, 1717, 1717, 1717, 1717, 1717, 1717,
    1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717, 1717,
    1717, 1717, 1717, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
    1726, 1727, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728,
    1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728, 1728,
    1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1739,
    1739, 1739, 1739, 1739, 1739, 1739, 1739, 1739, 1739, 1739, 1739, 1739,
    1739, 1739, 1739, 1739, 1739, 1739, 1739, 1739, 1740, 1741, 1742, 1743,
    1744, 1745, 1746, 1747, 1748, 1749, 1750, 1750, 1750, 1750, 1750, 1750,
    1750, 1750, 1750, 1750, 1750, 1750, 1750, 1750, 1750, 1750, 1750, 1750,
    1750, 1750, 1750, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758,
    1759, 1760, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
    1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761, 1761,
    1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1772,
    1772, 1772, 1772, 1772, 1772, 1772, 1772, 1772, 1772, 1772, 1772, 1772,
    1772, 1772, 1772, 1772, 1772, 1772, 1772, 1772, 1773, 1774, 1775, 1776,
    1777, 1778, 1779, 1780, 1781, 1782, 1783, 1783, 1783, 1783, 1783, 1783,
    1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783, 1783,
    1783, 1783, 1783, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
    1792, 1793, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794,
    1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794,
    1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1805,
    1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805,
    1805, 1805, 1805, 1805, 1805, 1805, 1805, 1805, 1806, 1807, 1808, 1809,
    1810, 1811, 1812, 1813, 1814, 1815, 1816, 1816, 1816, 1816, 1816, 1816,
    1816, 1816, 1816, 1816, 1816, 1816, 1816, 1816, 1816, 1816, 1816, 1816,
    1816, 1816, 1816, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
    1825, 1826, 1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827,
    1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827,
    1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1838,
    1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838,
    1838, 1838, 1838, 1838, 1838, 1838, 1838, 1838, 1839, 1840, 1841, 1842,
    1843, 1844, 1845, 1846, 1847, 1848, 1849, 1849, 1849, 1849, 1849, 1849,
    1849, 1849, 1849, 1849, 1849, 1849, 1849, 1849, 1849, 1849, 1849, 1849,
    1849, 1849, 1849, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
    1858, 1859, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860,
    1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860, 1860,
    1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1871,
    1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
    1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1872, 1873, 1874, 1875,
    1876, 1877, 1878, 1879, 1880, 1881, 1882, 1882, 1882, 1882, 1882, 1882,
    1882, 1882, 1882, 1882, 1882, 1882, 1882, 1882, 1882, 1882, 1882, 1882,
    1882, 1882, 1882, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890,
    1891, 1892, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893,
    1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893, 1893,
    1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1904,
    1904, 1904, 1904, 1904, 1904, 1904, 1904, 1904, 1904, 1904, 1904, 1904,
    1904, 1904, 1904, 1904, 1904, 1904, 1904, 1904, 1905, 1906, 1907, 1908,
    1909, 1910, 1911, 1912, 1913, 1914, 1915, 1915, 1915, 1915, 1915, 1915,
    1915, 1915, 1915, 1915, 1915, 1915, 1915, 1915, 1915, 1915, 1915, 1915,
    1915, 1915, 1915, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
    1924, 1925, 1926, 1926, 1926, 1926, 1926, 1926, 1926, 1926, 1926, 1926,
    1926, 1926, 1926, 1926, 1926, 1926, 1926, 1926, 1926, 1926, 1926, 1926,
    1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1937,
    1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937,
    1937, 1937, 1937, 1937, 1937, 1937, 1937, 1937, 1938, 1939, 1940, 1941,
    1942, 1943, 1944, 1945, 1946, 1947, 1948, 1948, 1948, 1948, 1948, 1948,
    1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948, 1948,
    1948, 1948, 1948, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
    1957, 1958, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
    1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959, 1959,
    1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1970,
    1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
    1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1971, 1972, 1973, 1974,
    1975, 1976, 1977, 1978, 1979, 1980, 1981, 1981, 1981, 1981, 1981, 1981,
    1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981,
    1981, 1981, 1981, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
    1990, 1991, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
    1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992, 1992,
    1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2003,
    2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003,
    2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2004, 2004, 2004, 2004,
    2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,
    2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005,
    2005, 2005, 2005, 2005, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006,
    2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006, 2007, 2007, 2007, 2007,
    2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007,
    2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008, 2008,
    2008, 2008, 2008, 2008, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009,
    2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2010, 2010, 2010, 2010,
    2011, 2011, 2011, 2011, 2012, 2012, 2012, 2012, 2013, 2013, 2013, 2013,
    2014, 2014, 2014, 2014, 2015, 2015, 2016, 2016, 2017, 2017, 2018, 2019,
    2020, 2021, 2022, 2023};
static const uint32_t g_emit_op_1_inner[2024] = {
    10,     154,    298,    442,    586,    730,    874,    1018,   1162,
    1306,   1451,   1595,   1739,   1883,   2027,   2171,   2315,   2459,
    2603,   2747,   2891,   3035,   3179,   3323,   3467,   3611,   3755,
    3899,   4043,   4187,   4331,   4475,   4619,   4763,   4907,   5051,
    5196,   5340,   5484,   5628,   5772,   5916,   6060,   6204,   6348,
    6492,   6636,   6780,   6924,   7068,   7212,   7356,   7500,   7644,
    7788,   7932,   8076,   8220,   8364,   8508,   8652,   8796,   8940,
    9084,   9228,   9372,   9516,   9660,   17,     226,    9802,   9946,
    10090,  10234,  10378,  10522,  10666,  10810,  10954,  11099,  11243,
    11387,  11531,  11675,  11819,  11963,  12107,  12251,  12395,  12539,
    12683,  12827,  12971,  13115,  13259,  13403,  13547,  13691,  13835,
    13979,  14123,  14267,  14411,  14555,  14699,  14844,  14988,  15132,
    15276,  15420,  15564,  15708,  15852,  15996,  16140,  16284,  16428,
    16572,  16716,  16860,  17004,  17148,  17292,  17436,  17580,  17724,
    17868,  18012,  18156,  18300,  18444,  18588,  18732,  18876,  19020,
    19164,  19308,  233,    370,    10018,  19450,  19594,  19738,  19882,
    20026,  20170,  20314,  20458,  20603,  20747,  20891,  21035,  21179,
    21323,  21467,  21611,  21755,  21899,  22043,  22187,  22331,  22475,
    22619,  22763,  22907,  23051,  23195,  23339,  23483,  23627,  23771,
    23915,  24059,  24203,  24348,  24492,  24636,  24780,  24924,  25068,
    25212,  25356,  25500,  25644,  25788,  25932,  26076,  26220,  26364,
    26508,  26652,  26796,  26940,  27084,  27228,  27372,  27516,  27660,
    27804,  27948,  28092,  28236,  28380,  28524,  28668,  28812,  377,
    514,    10162,  19666,  28954,  29098,  29242,  29386,  29530,  29674,
    29818,  29963,  30107,  30251,  30395,  30539,  30683,  30827,  30971,
    31115,  31259,  31403,  31547,  31691,  31835,  31979,  32123,  32267,
    32411,  32555,  32699,  32843,  32987,  33131,  33275,  33419,  33563,
    33708,  33852,  33996,  34140,  34284,  34428,  34572,  34716,  34860,
    35004,  35148,  35292,  35436,  35580,  35724,  35868,  36012,  36156,
    36300,  36444,  36588,  36732,  36876,  37020,  37164,  37308,  37452,
    37596,  37740,  37884,  38028,  38172,  521,    658,    10306,  19810,
    29170,  38314,  38458,  38602,  38746,  38890,  39034,  39179,  39323,
    39467,  39611,  39755,  39899,  40043,  40187,  40331,  40475,  40619,
    40763,  40907,  41051,  41195,  41339,  41483,  41627,  41771,  41915,
    42059,  42203,  42347,  42491,  42635,  42779,  42924,  43068,  43212,
    43356,  43500,  43644,  43788,  43932,  44076,  44220,  44364,  44508,
    44652,  44796,  44940,  45084,  45228,  45372,  45516,  45660,  45804,
    45948,  46092,  46236,  46380,  46524,  46668,  46812,  46956,  47100,
    47244,  47388,  665,    802,    10450,  19954,  29314,  38530,  47530,
    47674,  47818,  47962,  48106,  48251,  48395,  48539,  48683,  48827,
    48971,  49115,  49259,  49403,  49547,  49691,  49835,  49979,  50123,
    50267,  50411,  50555,  50699,  50843,  50987,  51131,  51275,  51419,
    51563,  51707,  51851,  51996,  52140,  52284,  52428,  52572,  52716,
    52860,  53004,  53148,  53292,  53436,  53580,  53724,  53868,  54012,
    54156,  54300,  54444,  54588,  54732,  54876,  55020,  55164,  55308,
    55452,  55596,  55740,  55884,  56028,  56172,  56316,  56460,  809,
    946,    10594,  20098,  29458,  38674,  47746,  56602,  56746,  56890,
    57034,  57179,  57323,  57467,  57611,  57755,  57899,  58043,  58187,
    58331,  58475,  58619,  58763,  58907,  59051,  59195,  59339,  59483,
    59627,  59771,  59915,  60059,  60203,  60347,  60491,  60635,  60779,
    60924,  61068,  61212,  61356,  61500,  61644,  61788,  61932,  62076,
    62220,  62364,  62508,  62652,  62796,  62940,  63084,  63228,  63372,
    63516,  63660,  63804,  63948,  64092,  64236,  64380,  64524,  64668,
    64812,  64956,  65100,  65244,  65388,  953,    1090,   10738,  20242,
    29602,  38818,  47890,  56818,  65530,  65674,  65818,  65963,  66107,
    66251,  66395,  66539,  66683,  66827,  66971,  67115,  67259,  67403,
    67547,  67691,  67835,  67979,  68123,  68267,  68411,  68555,  68699,
    68843,  68987,  69131,  69275,  69419,  69563,  69708,  69852,  69996,
    70140,  70284,  70428,  70572,  70716,  70860,  71004,  71148,  71292,
    71436,  71580,  71724,  71868,  72012,  72156,  72300,  72444,  72588,
    72732,  72876,  73020,  73164,  73308,  73452,  73596,  73740,  73884,
    74028,  74172,  1097,   1234,   10882,  20386,  29746,  38962,  48034,
    56962,  65746,  74314,  74458,  74603,  74747,  74891,  75035,  75179,
    75323,  75467,  75611,  75755,  75899,  76043,  76187,  76331,  76475,
    76619,  76763,  76907,  77051,  77195,  77339,  77483,  77627,  77771,
    77915,  78059,  78203,  78348,  78492,  78636,  78780,  78924,  79068,
    79212,  79356,  79500,  79644,  79788,  79932,  80076,  80220,  80364,
    80508,  80652,  80796,  80940,  81084,  81228,  81372,  81516,  81660,
    81804,  81948,  82092,  82236,  82380,  82524,  82668,  82812,  1241,
    1378,   11026,  20530,  29890,  39106,  48178,  57106,  65890,  74530,
    82954,  83099,  83243,  83387,  83531,  83675,  83819,  83963,  84107,
    84251,  84395,  84539,  84683,  84827,  84971,  85115,  85259,  85403,
    85547,  85691,  85835,  85979,  86123,  86267,  86411,  86555,  86699,
    86844,  86988,  87132,  87276,  87420,  87564,  87708,  87852,  87996,
    88140,  88284,  88428,  88572,  88716,  88860,  89004,  89148,  89292,
    89436,  89580,  89724,  89868,  90012,  90156,  90300,  90444,  90588,
    90732,  90876,  91020,  91164,  91308,  1385,   1523,   11171,  20675,
    30035,  39251,  48323,  57251,  66035,  74675,  83171,  91452,  91596,
    91740,  91884,  92028,  92172,  92316,  92460,  92604,  92748,  92892,
    93036,  93180,  93324,  93468,  93612,  93756,  93900,  94044,  94188,
    94332,  94476,  94620,  94764,  94908,  95052,  1530,   1667,   11315,
    20819,  30179,  39395,  48467,  57395,  66179,  74819,  83315,  91668,
    95196,  95340,  95484,  95628,  95772,  95916,  96060,  96204,  96348,
    96492,  96636,  96780,  96924,  97068,  97212,  97356,  97500,  97644,
    97788,  97932,  98076,  98220,  98364,  98508,  98652,  1674,   1811,
    11459,  20963,  30323,  39539,  48611,  57539,  66323,  74963,  83459,
    91812,  95412,  98796,  98940,  99084,  99228,  99372,  99516,  99660,
    99804,  99948,  100092, 100236, 100380, 100524, 100668, 100812, 100956,
    101100, 101244, 101388, 101532, 101676, 101820, 101964, 102108, 1818,
    1955,   11603,  21107,  30467,  39683,  48755,  57683,  66467,  75107,
    83603,  91956,  95556,  99012,  102252, 102396, 102540, 102684, 102828,
    102972, 103116, 103260, 103404, 103548, 103692, 103836, 103980, 104124,
    104268, 104412, 104556, 104700, 104844, 104988, 105132, 105276, 105420,
    1962,   2099,   11747,  21251,  30611,  39827,  48899,  57827,  66611,
    75251,  83747,  92100,  95700,  99156,  102468, 105564, 105708, 105852,
    105996, 106140, 106284, 106428, 106572, 106716, 106860, 107004, 107148,
    107292, 107436, 107580, 107724, 107868, 108012, 108156, 108300, 108444,
    108588, 2106,   2243,   11891,  21395,  30755,  39971,  49043,  57971,
    66755,  75395,  83891,  92244,  95844,  99300,  102612, 105780, 108732,
    108876, 109020, 109164, 109308, 109452, 109596, 109740, 109884, 110028,
    110172, 110316, 110460, 110604, 110748, 110892, 111036, 111180, 111324,
    111468, 111612, 2250,   2387,   12035,  21539,  30899,  40115,  49187,
    58115,  66899,  75539,  84035,  92388,  95988,  99444,  102756, 105924,
    108948, 111756, 111900, 112044, 112188, 112332, 112476, 112620, 112764,
    112908, 113052, 113196, 113340, 113484, 113628, 113772, 113916, 114060,
    114204, 114348, 114492, 2394,   2531,   12179,  21683,  31043,  40259,
    49331,  58259,  67043,  75683,  84179,  92532,  96132,  99588,  102900,
    106068, 109092, 111972, 114636, 114780, 114924, 115068, 115212, 115356,
    115500, 115644, 115788, 115932, 116076, 116220, 116364, 116508, 116652,
    116796, 116940, 117084, 117228, 2538,   2675,   12323,  21827,  31187,
    40403,  49475,  58403,  67187,  75827,  84323,  92676,  96276,  99732,
    103044, 106212, 109236, 112116, 114852, 117372, 117516, 117660, 117804,
    117948, 118092, 118236, 118380, 118524, 118668, 118812, 118956, 119100,
    119244, 119388, 119532, 119676, 119820, 2682,   2819,   12467,  21971,
    31331,  40547,  49619,  58547,  67331,  75971,  84467,  92820,  96420,
    99876,  103188, 106356, 109380, 112260, 114996, 117588, 119964, 120108,
    120252, 120396, 120540, 120684, 120828, 120972, 121116, 121260, 121404,
    121548, 121692, 121836, 121980, 122124, 122268, 2826,   2963,   12611,
    22115,  31475,  40691,  49763,  58691,  67475,  76115,  84611,  92964,
    96564,  100020, 103332, 106500, 109524, 112404, 115140, 117732, 120180,
    122412, 122556, 122700, 122844, 122988, 123132, 123276, 123420, 123564,
    123708, 123852, 123996, 124140, 124284, 124428, 124572, 2970,   3107,
    12755,  22259,  31619,  40835,  49907,  58835,  67619,  76259,  84755,
    93108,  96708,  100164, 103476, 106644, 109668, 112548, 115284, 117876,
    120324, 122628, 124716, 124860, 125004, 125148, 125292, 125436, 125580,
    125724, 125868, 126012, 126156, 126300, 126444, 126588, 126732, 3114,
    3251,   12899,  22403,  31763,  40979,  50051,  58979,  67763,  76403,
    84899,  93252,  96852,  100308, 103620, 106788, 109812, 112692, 115428,
    118020, 120468, 122772, 124932, 126876, 127020, 127164, 127308, 127452,
    127596, 127740, 127884, 128028, 128172, 128316, 128460, 128604, 128748,
    3258,   3395,   13043,  22547,  31907,  41123,  50195,  59123,  67907,
    76547,  85043,  93396,  96996,  100452, 103764, 106932, 109956, 112836,
    115572, 118164, 120612, 122916, 125076, 127092, 128892, 129036, 129180,
    129324, 129468, 129612, 129756, 129900, 130044, 130188, 130332, 130476,
    130620, 3402,   3539,   13187,  22691,  32051,  41267,  50339,  59267,
    68051,  76691,  85187,  93540,  97140,  100596, 103908, 107076, 110100,
    112980, 115716, 118308, 120756, 123060, 125220, 127236, 129108, 130764,
    130908, 131052, 131196, 131340, 131484, 131628, 131772, 131916, 132060,
    132204, 132348, 3546,   3683,   13331,  22835,  32195,  41411,  50483,
    59411,  68195,  76835,  85331,  93684,  97284,  100740, 104052, 107220,
    110244, 113124, 115860, 118452, 120900, 123204, 125364, 127380, 129252,
    130980, 132492, 132636, 132780, 132924, 133068, 133212, 133356, 133500,
    133644, 133788, 133932, 3690,   3827,   13475,  22979,  32339,  41555,
    50627,  59555,  68339,  76979,  85475,  93828,  97428,  100884, 104196,
    107364, 110388, 113268, 116004, 118596, 121044, 123348, 125508, 127524,
    129396, 131124, 132708, 134076, 134220, 134364, 134508, 134652, 134796,
    134940, 135084, 135228, 135372, 3834,   3971,   13619,  23123,  32483,
    41699,  50771,  59699,  68483,  77123,  85619,  93972,  97572,  101028,
    104340, 107508, 110532, 113412, 116148, 118740, 121188, 123492, 125652,
    127668, 129540, 131268, 132852, 134292, 135516, 135660, 135804, 135948,
    136092, 136236, 136380, 136524, 136668, 3978,   4115,   13763,  23267,
    32627,  41843,  50915,  59843,  68627,  77267,  85763,  94116,  97716,
    101172, 104484, 107652, 110676, 113556, 116292, 118884, 121332, 123636,
    125796, 127812, 129684, 131412, 132996, 134436, 135732, 136812, 136956,
    137100, 137244, 137388, 137532, 137676, 137820, 4122,   4259,   13907,
    23411,  32771,  41987,  51059,  59987,  68771,  77411,  85907,  94260,
    97860,  101316, 104628, 107796, 110820, 113700, 116436, 119028, 121476,
    123780, 125940, 127956, 129828, 131556, 133140, 134580, 135876, 137028,
    137964, 138108, 138252, 138396, 138540, 138684, 138828, 4266,   4403,
    14051,  23555,  32915,  42131,  51203,  60131,  68915,  77555,  86051,
    94404,  98004,  101460, 104772, 107940, 110964, 113844, 116580, 119172,
    121620, 123924, 126084, 128100, 129972, 131700, 133284, 134724, 136020,
    137172, 138180, 138972, 139116, 139260, 139404, 139548, 139692, 4410,
    4547,   14195,  23699,  33059,  42275,  51347,  60275,  69059,  77699,
    86195,  94548,  98148,  101604, 104916, 108084, 111108, 113988, 116724,
    119316, 121764, 124068, 126228, 128244, 130116, 131844, 133428, 134868,
    136164, 137316, 138324, 139188, 139836, 139980, 140124, 140268, 140412,
    4554,   4691,   14339,  23843,  33203,  42419,  51491,  60419,  69203,
    77843,  86339,  94692,  98292,  101748, 105060, 108228, 111252, 114132,
    116868, 119460, 121908, 124212, 126372, 128388, 130260, 131988, 133572,
    135012, 136308, 137460, 138468, 139332, 140052, 140556, 140700, 140844,
    140988, 4698,   4835,   14483,  23987,  33347,  42563,  51635,  60563,
    69347,  77987,  86483,  94836,  98436,  101892, 105204, 108372, 111396,
    114276, 117012, 119604, 122052, 124356, 126516, 128532, 130404, 132132,
    133716, 135156, 136452, 137604, 138612, 139476, 140196, 140772, 141132,
    141276, 141420, 4842,   4979,   14627,  24131,  33491,  42707,  51779,
    60707,  69491,  78131,  86627,  94980,  98580,  102036, 105348, 108516,
    111540, 114420, 117156, 119748, 122196, 124500, 126660, 128676, 130548,
    132276, 133860, 135300, 136596, 137748, 138756, 139620, 140340, 140916,
    141348, 141564, 141708, 4986,   5123,   14771,  24275,  33635,  42851,
    51923,  60851,  69635,  78275,  86771,  141852, 95124,  98724,  102180,
    105492, 108660, 111684, 114564, 117300, 119892, 122340, 124644, 126804,
    128820, 130692, 132420, 134004, 135444, 136740, 137892, 138900, 139764,
    140484, 141060, 141492, 141780, 5130,   5268,   14916,  24420,  33780,
    42996,  52068,  60996,  69780,  78420,  86916,  5275,   5412,   15060,
    24564,  33924,  43140,  52212,  61140,  69924,  78564,  87060,  5419,
    5556,   15204,  24708,  34068,  43284,  52356,  61284,  70068,  78708,
    87204,  5563,   5700,   15348,  24852,  34212,  43428,  52500,  61428,
    70212,  78852,  87348,  5707,   5844,   15492,  24996,  34356,  43572,
    52644,  61572,  70356,  78996,  87492,  5851,   5988,   15636,  25140,
    34500,  43716,  52788,  61716,  70500,  79140,  87636,  5995,   6132,
    15780,  25284,  34644,  43860,  52932,  61860,  70644,  79284,  87780,
    6139,   6276,   15924,  25428,  34788,  44004,  53076,  62004,  70788,
    79428,  87924,  6283,   6420,   16068,  25572,  34932,  44148,  53220,
    62148,  70932,  79572,  88068,  6427,   6564,   16212,  25716,  35076,
    44292,  53364,  62292,  71076,  79716,  88212,  6571,   6708,   16356,
    25860,  35220,  44436,  53508,  62436,  71220,  79860,  88356,  6715,
    6852,   16500,  26004,  35364,  44580,  53652,  62580,  71364,  80004,
    88500,  6859,   6996,   16644,  26148,  35508,  44724,  53796,  62724,
    71508,  80148,  88644,  7003,   7140,   16788,  26292,  35652,  44868,
    53940,  62868,  71652,  80292,  88788,  7147,   7284,   16932,  26436,
    35796,  45012,  54084,  63012,  71796,  80436,  88932,  7291,   7428,
    17076,  26580,  35940,  45156,  54228,  63156,  71940,  80580,  89076,
    7435,   7572,   17220,  26724,  36084,  45300,  54372,  63300,  72084,
    80724,  89220,  7579,   7716,   17364,  26868,  36228,  45444,  54516,
    63444,  72228,  80868,  89364,  7723,   7860,   17508,  27012,  36372,
    45588,  54660,  63588,  72372,  81012,  89508,  7867,   8004,   17652,
    27156,  36516,  45732,  54804,  63732,  72516,  81156,  89652,  8011,
    8148,   17796,  27300,  36660,  45876,  54948,  63876,  72660,  81300,
    89796,  8155,   8292,   17940,  27444,  36804,  46020,  55092,  64020,
    72804,  81444,  89940,  8299,   8436,   18084,  27588,  36948,  46164,
    55236,  64164,  72948,  81588,  90084,  8443,   8580,   18228,  27732,
    37092,  46308,  55380,  64308,  73092,  81732,  90228,  8587,   8724,
    18372,  27876,  37236,  46452,  55524,  64452,  73236,  81876,  90372,
    8731,   8868,   18516,  28020,  37380,  46596,  55668,  64596,  73380,
    82020,  90516,  8875,   9012,   18660,  28164,  37524,  46740,  55812,
    64740,  73524,  82164,  90660,  9019,   9156,   18804,  28308,  37668,
    46884,  55956,  64884,  73668,  82308,  90804,  9163,   9300,   18948,
    28452,  37812,  47028,  56100,  65028,  73812,  82452,  90948,  9307,
    9444,   19092,  28596,  37956,  47172,  56244,  65172,  73956,  82596,
    91092,  9451,   9588,   19236,  28740,  38100,  47316,  56388,  65316,
    74100,  82740,  91236,  9595,   141996, 9732,   19380,  28884,  38244,
    47460,  56532,  65460,  74244,  82884,  9739,   142148, 142220, 142292,
    142364, 142436, 142508, 142582, 142654, 142726, 142798, 142870, 142943,
    143015, 143087, 143160, 143232, 36,     48,     60,     72};
inline uint32_t GetEmitOp1(size_t i) {
  return g_emit_op_1_inner[g_emit_op_1_outer[i]];
}
// max=36 unique=2 flat=16 nested=32
// monotonic increasing
static const uint8_t g_emit_buffer_2[2] = {0, 36};
inline uint8_t GetEmitBuffer2(size_t i) { return g_emit_buffer_2[i]; }
// max=14 unique=2 flat=16 nested=32
// monotonic increasing
static const uint8_t g_emit_op_2[2] = {13, 14};
inline uint8_t GetEmitOp2(size_t i) { return g_emit_op_2[i]; }
// max=91 unique=2 flat=16 nested=32
// monotonic increasing
static const uint8_t g_emit_buffer_3[2] = {64, 91};
inline uint8_t GetEmitBuffer3(size_t i) { return g_emit_buffer_3[i]; }
// max=14 unique=2 flat=16 nested=32
// monotonic increasing
static const uint8_t g_emit_op_3[2] = {13, 14};
inline uint8_t GetEmitOp3(size_t i) { return g_emit_op_3[i]; }
// max=126 unique=2 flat=16 nested=32
// monotonic increasing
static const uint8_t g_emit_buffer_4[2] = {93, 126};
inline uint8_t GetEmitBuffer4(size_t i) { return g_emit_buffer_4[i]; }
// max=14 unique=2 flat=16 nested=32
// monotonic increasing
static const uint8_t g_emit_op_4[2] = {13, 14};
inline uint8_t GetEmitOp4(size_t i) { return g_emit_op_4[i]; }
// max=239 unique=96 flat=768 nested=1536
static const uint8_t g_emit_buffer_5[96] = {
    94,  125, 60,  96,  123, 92,  195, 208, 128, 130, 131, 162, 184, 194,
    224, 226, 153, 161, 167, 172, 176, 177, 179, 209, 216, 217, 227, 229,
    230, 129, 132, 133, 134, 136, 146, 154, 156, 160, 163, 164, 169, 170,
    173, 178, 181, 185, 186, 187, 189, 190, 196, 198, 228, 232, 233, 1,
    135, 137, 138, 139, 140, 141, 143, 147, 149, 150, 151, 152, 155, 157,
    158, 165, 166, 168, 174, 175, 180, 182, 183, 188, 191, 197, 231, 239,
    9,   142, 144, 145, 148, 159, 171, 206, 215, 225, 236, 237};
inline uint8_t GetEmitBuffer5(size_t i) { return g_emit_buffer_5[i]; }
// max=12564 unique=106 flat=65536 nested=34464
// monotonic increasing
static const uint8_t g_emit_op_5_outer[4096] = {
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,   0,   0,   0,   0,   0,  0,  0,  0,  0,  0,  0,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  1,  1,   1,   1,   1,   1,   1,  1,  1,  1,  1,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  2,   2,   2,   2,   2,   2,  2,  2,  2,  2,  2,  2,  2,  2,
    2,  2,  2,  2,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  3,  3,  3,  3,  3,  3,
    3,  3,  3,  3,  3,   3,   3,   3,   3,   3,  3,  3,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  4,  4,  4,   4,   4,   4,   4,   4,  4,  4,  4,  4,  4,  4,  4,  4,
    4,  4,  5,  5,  5,   5,   5,   5,   5,   5,  5,  5,  5,  5,  5,  5,  5,  5,
    5,  5,  5,  5,  5,   5,   5,   5,   5,   5,  5,  5,  5,  5,  5,  5,  6,  6,
    6,  6,  6,  6,  6,   6,   6,   6,   6,   6,  6,  6,  6,  6,  6,  6,  6,  6,
    6,  6,  6,  6,  6,   6,   6,   6,   6,   6,  6,  6,  7,  7,  7,  7,  7,  7,
    7,  7,  7,  7,  7,   7,   7,   7,   7,   7,  7,  7,  7,  7,  7,  7,  7,  7,
    7,  7,  7,  7,  7,   7,   7,   7,   8,   8,  8,  8,  8,  8,  8,  8,  8,  8,
    8,  8,  8,  8,  8,   8,   9,   9,   9,   9,  9,  9,  9,  9,  9,  9,  9,  9,
    9,  9,  9,  9,  10,  10,  10,  10,  10,  10, 10, 10, 10, 10, 10, 10, 10, 10,
    10, 10, 11, 11, 11,  11,  11,  11,  11,  11, 11, 11, 11, 11, 11, 11, 11, 11,
    12, 12, 12, 12, 12,  12,  12,  12,  12,  12, 12, 12, 12, 12, 12, 12, 13, 13,
    13, 13, 13, 13, 13,  13,  13,  13,  13,  13, 13, 13, 13, 13, 14, 14, 14, 14,
    14, 14, 14, 14, 14,  14,  14,  14,  14,  14, 14, 14, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15,  15,  15,  15,  15,  15, 16, 16, 16, 16, 16, 16, 16, 16,
    17, 17, 17, 17, 17,  17,  17,  17,  18,  18, 18, 18, 18, 18, 18, 18, 19, 19,
    19, 19, 19, 19, 19,  19,  20,  20,  20,  20, 20, 20, 20, 20, 21, 21, 21, 21,
    21, 21, 21, 21, 22,  22,  22,  22,  22,  22, 22, 22, 23, 23, 23, 23, 23, 23,
    23, 23, 24, 24, 24,  24,  24,  24,  24,  24, 25, 25, 25, 25, 25, 25, 25, 25,
    26, 26, 26, 26, 26,  26,  26,  26,  27,  27, 27, 27, 27, 27, 27, 27, 28, 28,
    28, 28, 28, 28, 28,  28,  29,  29,  29,  29, 30, 30, 30, 30, 31, 31, 31, 31,
    32, 32, 32, 32, 33,  33,  33,  33,  34,  34, 34, 34, 35, 35, 35, 35, 36, 36,
    36, 36, 37, 37, 37,  37,  38,  38,  38,  38, 39, 39, 39, 39, 40, 40, 40, 40,
    41, 41, 41, 41, 42,  42,  42,  42,  43,  43, 43, 43, 44, 44, 44, 44, 45, 45,
    45, 45, 46, 46, 46,  46,  47,  47,  47,  47, 48, 48, 48, 48, 49, 49, 49, 49,
    50, 50, 50, 50, 51,  51,  51,  51,  52,  52, 52, 52, 53, 53, 53, 53, 54, 54,
    54, 54, 55, 55, 56,  56,  57,  57,  58,  58, 59, 59, 60, 60, 61, 61, 62, 62,
    63, 63, 64, 64, 65,  65,  66,  66,  67,  67, 68, 68, 69, 69, 70, 70, 71, 71,
    72, 72, 73, 73, 74,  74,  75,  75,  76,  76, 77, 77, 78, 78, 79, 79, 80, 80,
    81, 81, 82, 82, 83,  83,  84,  85,  86,  87, 88, 89, 90, 91, 92, 93, 94, 95,
    96, 97, 98, 99, 100, 101, 102, 103, 104, 105};
static const uint16_t g_emit_op_5_inner[106] = {
    14,    146,   279,   411,   543,   679,   811,   943,   1076,  1208,  1340,
    1472,  1604,  1736,  1868,  2000,  2133,  2265,  2397,  2529,  2661,  2793,
    2925,  3057,  3189,  3321,  3453,  3585,  3717,  3850,  3982,  4114,  4246,
    4378,  4510,  4642,  4774,  4906,  5038,  5170,  5302,  5434,  5566,  5698,
    5830,  5962,  6094,  6226,  6358,  6490,  6622,  6754,  6886,  7018,  7150,
    7283,  7415,  7547,  7679,  7811,  7943,  8075,  8207,  8339,  8471,  8603,
    8735,  8867,  8999,  9131,  9263,  9395,  9527,  9659,  9791,  9923,  10055,
    10187, 10319, 10451, 10583, 10715, 10847, 10979, 11112, 11244, 11376, 11508,
    11640, 11772, 11904, 12036, 12168, 12300, 12432, 12564, 24,    36,    48,
    60,    72,    84,    96,    108,   120,   132};
inline uint16_t GetEmitOp5(size_t i) {
  return g_emit_op_5_inner[g_emit_op_5_outer[i]];
}
// max=207 unique=2 flat=16 nested=32
// monotonic increasing
static const uint8_t g_emit_buffer_6[2] = {199, 207};
inline uint8_t GetEmitBuffer6(size_t i) { return g_emit_buffer_6[i]; }
// max=26 unique=2 flat=16 nested=32
// monotonic increasing
static const uint8_t g_emit_op_6[2] = {25, 26};
inline uint8_t GetEmitOp6(size_t i) { return g_emit_op_6[i]; }
// max=235 unique=2 flat=16 nested=32
// monotonic increasing
static const uint8_t g_emit_buffer_7[2] = {234, 235};
inline uint8_t GetEmitBuffer7(size_t i) { return g_emit_buffer_7[i]; }
// max=26 unique=2 flat=16 nested=32
// monotonic increasing
static const uint8_t g_emit_op_7[2] = {25, 26};
inline uint8_t GetEmitOp7(size_t i) { return g_emit_op_7[i]; }
// max=201 unique=4 flat=32 nested=64
// monotonic increasing
static const uint8_t g_emit_buffer_8[4] = {192, 193, 200, 201};
inline uint8_t GetEmitBuffer8(size_t i) { return g_emit_buffer_8[i]; }
// max=32 unique=4 flat=32 nested=64
// monotonic increasing
static const uint8_t g_emit_op_8[4] = {26, 28, 30, 32};
inline uint8_t GetEmitOp8(size_t i) { return g_emit_op_8[i]; }
// max=213 unique=4 flat=32 nested=64
// monotonic increasing
static const uint8_t g_emit_buffer_9[4] = {202, 205, 210, 213};
inline uint8_t GetEmitBuffer9(size_t i) { return g_emit_buffer_9[i]; }
// max=32 unique=4 flat=32 nested=64
// monotonic increasing
static const uint8_t g_emit_op_9[4] = {26, 28, 30, 32};
inline uint8_t GetEmitOp9(size_t i) { return g_emit_op_9[i]; }
// max=240 unique=4 flat=32 nested=64
// monotonic increasing
static const uint8_t g_emit_buffer_10[4] = {218, 219, 238, 240};
inline uint8_t GetEmitBuffer10(size_t i) { return g_emit_buffer_10[i]; }
// max=32 unique=4 flat=32 nested=64
// monotonic increasing
static const uint8_t g_emit_op_10[4] = {26, 28, 30, 32};
inline uint8_t GetEmitOp10(size_t i) { return g_emit_op_10[i]; }
// max=244 unique=8 flat=64 nested=128
// monotonic increasing
static const uint8_t g_emit_buffer_11[8] = {211, 212, 214, 221,
                                            222, 223, 241, 244};
inline uint8_t GetEmitBuffer11(size_t i) { return g_emit_buffer_11[i]; }
// max=48 unique=8 flat=64 nested=128
// monotonic increasing
static const uint8_t g_emit_op_11[8] = {27, 30, 33, 36, 39, 42, 45, 48};
inline uint8_t GetEmitOp11(size_t i) { return g_emit_op_11[i]; }
// max=253 unique=8 flat=64 nested=128
// monotonic increasing
static const uint8_t g_emit_buffer_12[8] = {245, 246, 247, 248,
                                            250, 251, 252, 253};
inline uint8_t GetEmitBuffer12(size_t i) { return g_emit_buffer_12[i]; }
// max=48 unique=8 flat=64 nested=128
// monotonic increasing
static const uint8_t g_emit_op_12[8] = {27, 30, 33, 36, 39, 42, 45, 48};
inline uint8_t GetEmitOp12(size_t i) { return g_emit_op_12[i]; }
// max=254 unique=15 flat=120 nested=240
static const uint8_t g_emit_buffer_13[15] = {254, 2,  3,  4,  5,  6,  7, 8,
                                             11,  12, 14, 15, 16, 17, 18};
inline uint8_t GetEmitBuffer13(size_t i) { return g_emit_buffer_13[i]; }
// max=84 unique=15 flat=128 nested=248
// monotonic increasing
static const uint8_t g_emit_op_13[16] = {27, 27, 32, 36, 40, 44, 48, 52,
                                         56, 60, 64, 68, 72, 76, 80, 84};
inline uint8_t GetEmitOp13(size_t i) { return g_emit_op_13[i]; }
// max=255 unique=5 flat=40 nested=80
static const uint8_t g_emit_buffer_14[5] = {242, 243, 255, 203, 204};
inline uint8_t GetEmitBuffer14(size_t i) { return g_emit_buffer_14[i]; }
// max=39 unique=5 flat=64 nested=104
// monotonic increasing
static const uint8_t g_emit_op_14[8] = {26, 26, 29, 29, 32, 32, 36, 39};
inline uint8_t GetEmitOp14(size_t i) { return g_emit_op_14[i]; }
// max=249 unique=18 flat=144 nested=288
static const uint8_t g_emit_buffer_15[18] = {
    19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 127, 220, 249, 10, 13, 22};
inline uint8_t GetEmitBuffer15(size_t i) { return g_emit_buffer_15[i]; }
// max=234 unique=19 flat=512 nested=664
static const uint8_t g_emit_op_15[64] = {
    28,  28,  28,  28,  40,  40,  40,  40,  52,  52,  52,  52,  64,
    64,  64,  64,  76,  76,  76,  76,  88,  88,  88,  88,  100, 100,
    100, 100, 112, 112, 112, 112, 124, 124, 124, 124, 136, 136, 136,
    136, 148, 148, 148, 148, 160, 160, 160, 160, 172, 172, 172, 172,
    184, 184, 184, 184, 196, 196, 196, 196, 210, 222, 234, 36};
inline uint8_t GetEmitOp15(size_t i) { return g_emit_op_15[i]; }
template <typename F>
class HuffDecoder {
 public:
  HuffDecoder(F sink, const uint8_t* begin, const uint8_t* end)
      : sink_(sink), begin_(begin), end_(end) {}
  bool Run() {
    while (ok_) {
      if (!RefillTo12()) {
        Done();
        return ok_;
      }
      const auto index = buffer_ >> (buffer_len_ - 12);
      auto op = GetEmitOp1(index);
      buffer_len_ -= op % 12;
      op /= 12;
      const auto emit_ofs = op / 6;
      switch (op % 6) {
        case 2: {
          DecodeStep0();
          break;
        }
        case 3: {
          DecodeStep1();
          break;
        }
        case 4: {
          DecodeStep2();
          break;
        }
        case 5: {
          DecodeStep3();
          break;
        }
        case 1: {
          sink_(GetEmitBuffer1(emit_ofs + 0));
          break;
        }
        case 0: {
          sink_(GetEmitBuffer1(emit_ofs + 0));
          sink_(GetEmitBuffer1(emit_ofs + 1));
          break;
        }
      }
    }
    return ok_;
  }

 private:
  bool RefillTo12() {
    switch (buffer_len_) {
      case 10:
      case 11:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9: {
        return Read1();
      }
      case 0:
      case 1:
      case 2:
      case 3: {
        return Read2();
      }
    }
    return true;
  }
  bool Read2() {
    if (begin_ + 2 > end_) return false;
    buffer_ <<= 16;
    buffer_ |= static_cast<uint64_t>(*begin_++) << 8;
    buffer_ |= static_cast<uint64_t>(*begin_++) << 0;
    buffer_len_ += 16;
    return true;
  }
  bool Read1() {
    if (begin_ + 1 > end_) return false;
    buffer_ <<= 8;
    buffer_ |= static_cast<uint64_t>(*begin_++) << 0;
    buffer_len_ += 8;
    return true;
  }
  void DecodeStep0() {
    if (!RefillTo1()) {
      ok_ = false;
      return;
    }
    const auto index = buffer_ >> (buffer_len_ - 1);
    auto op = GetEmitOp2(index);
    buffer_len_ -= op % 1;
    sink_(GetEmitBuffer2(op + 0));
  }
  bool RefillTo1() {
    switch (buffer_len_) {
      case 0: {
        return Read1();
      }
    }
    return true;
  }
  void DecodeStep1() {
    if (!RefillTo1()) {
      ok_ = false;
      return;
    }
    const auto index = buffer_ >> (buffer_len_ - 1);
    auto op = GetEmitOp3(index);
    buffer_len_ -= op % 1;
    sink_(GetEmitBuffer3(op + 0));
  }
  void DecodeStep2() {
    if (!RefillTo1()) {
      ok_ = false;
      return;
    }
    const auto index = buffer_ >> (buffer_len_ - 1);
    auto op = GetEmitOp4(index);
    buffer_len_ -= op % 1;
    sink_(GetEmitBuffer4(op + 0));
  }
  void DecodeStep3() {
    if (!RefillTo12()) {
      ok_ = false;
      return;
    }
    const auto index = buffer_ >> (buffer_len_ - 12);
    auto op = GetEmitOp5(index);
    buffer_len_ -= op % 12;
    op /= 12;
    const auto emit_ofs = op / 11;
    switch (op % 11) {
      case 8: {
        DecodeStep10();
        break;
      }
      case 9: {
        DecodeStep11();
        break;
      }
      case 6: {
        DecodeStep12();
        break;
      }
      case 10: {
        DecodeStep13();
        break;
      }
      case 1: {
        DecodeStep4();
        break;
      }
      case 2: {
        DecodeStep5();
        break;
      }
      case 3: {
        DecodeStep6();
        break;
      }
      case 4: {
        DecodeStep7();
        break;
      }
      case 5: {
        DecodeStep8();
        break;
      }
      case 7: {
        DecodeStep9();
        break;
      }
      case 0: {
        sink_(GetEmitBuffer5(emit_ofs + 0));
        break;
      }
    }
  }
  void DecodeStep4() {
    if (!RefillTo1()) {
      ok_ = false;
      return;
    }
    const auto index = buffer_ >> (buffer_len_ - 1);
    auto op = GetEmitOp6(index);
    buffer_len_ -= op % 1;
    sink_(GetEmitBuffer6(op + 0));
  }
  void DecodeStep5() {
    if (!RefillTo1()) {
      ok_ = false;
      return;
    }
    const auto index = buffer_ >> (buffer_len_ - 1);
    auto op = GetEmitOp7(index);
    buffer_len_ -= op % 1;
    sink_(GetEmitBuffer7(op + 0));
  }
  void DecodeStep6() {
    if (!RefillTo2()) {
      ok_ = false;
      return;
    }
    const auto index = buffer_ >> (buffer_len_ - 2);
    auto op = GetEmitOp8(index);
    buffer_len_ -= op % 2;
    sink_(GetEmitBuffer8(op + 0));
  }
  bool RefillTo2() {
    switch (buffer_len_) {
      case 0:
      case 1: {
        return Read1();
      }
    }
    return true;
  }
  void DecodeStep7() {
    if (!RefillTo2()) {
      ok_ = false;
      return;
    }
    const auto index = buffer_ >> (buffer_len_ - 2);
    auto op = GetEmitOp9(index);
    buffer_len_ -= op % 2;
    sink_(GetEmitBuffer9(op + 0));
  }
  void DecodeStep8() {
    if (!RefillTo2()) {
      ok_ = false;
      return;
    }
    const auto index = buffer_ >> (buffer_len_ - 2);
    auto op = GetEmitOp10(index);
    buffer_len_ -= op % 2;
    sink_(GetEmitBuffer10(op + 0));
  }
  void DecodeStep9() {
    if (!RefillTo3()) {
      ok_ = false;
      return;
    }
    const auto index = buffer_ >> (buffer_len_ - 3);
    auto op = GetEmitOp11(index);
    buffer_len_ -= op % 3;
    sink_(GetEmitBuffer11(op + 0));
  }
  bool RefillTo3() {
    switch (buffer_len_) {
      case 0:
      case 1:
      case 2: {
        return Read1();
      }
    }
    return true;
  }
  void DecodeStep10() {
    if (!RefillTo3()) {
      ok_ = false;
      return;
    }
    const auto index = buffer_ >> (buffer_len_ - 3);
    auto op = GetEmitOp12(index);
    buffer_len_ -= op % 3;
    sink_(GetEmitBuffer12(op + 0));
  }
  void DecodeStep11() {
    if (!RefillTo4()) {
      ok_ = false;
      return;
    }
    const auto index = buffer_ >> (buffer_len_ - 4);
    auto op = GetEmitOp13(index);
    buffer_len_ -= op % 4;
    sink_(GetEmitBuffer13(op + 0));
  }
  bool RefillTo4() {
    switch (buffer_len_) {
      case 0:
      case 1:
      case 2:
      case 3: {
        return Read1();
      }
    }
    return true;
  }
  void DecodeStep12() {
    if (!RefillTo3()) {
      ok_ = false;
      return;
    }
    const auto index = buffer_ >> (buffer_len_ - 3);
    auto op = GetEmitOp14(index);
    buffer_len_ -= op % 3;
    sink_(GetEmitBuffer14(op + 0));
  }
  void DecodeStep13() {
    if (!RefillTo6()) {
      ok_ = false;
      return;
    }
    const auto index = buffer_ >> (buffer_len_ - 6);
    auto op = GetEmitOp15(index);
    buffer_len_ -= op % 6;
    op /= 6;
    const auto emit_ofs = op / 2;
    switch (op % 2) {
      case 1: {
        begin_ = end_;
        buffer_len_ = 0;
        break;
      }
      case 0: {
        sink_(GetEmitBuffer15(emit_ofs + 0));
        break;
      }
    }
  }
  bool RefillTo6() {
    switch (buffer_len_) {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5: {
        return Read1();
      }
    }
    return true;
  }
  void Done() {
    if (buffer_len_ < 11) {
      buffer_ = (buffer_ << (11 - buffer_len_)) |
                ((uint64_t(1) << (11 - buffer_len_)) - 1);
      buffer_len_ = 11;
    }
    const auto index = buffer_ >> (buffer_len_ - 11);
    auto op = GetEmitOp0(index);
    buffer_len_ -= op % 11;
    op /= 11;
    const auto emit_ofs = op / 4;
    switch (op % 4) {
      case 1:
      case 2:
      case 3: {
        break;
      }
      case 0: {
        sink_(GetEmitBuffer0(emit_ofs + 0));
        break;
      }
    }
    if (buffer_len_ == 0) return;
    const uint64_t mask = (1 << buffer_len_) - 1;
    if ((buffer_ & mask) != mask) ok_ = false;
  }
  F sink_;
  const uint8_t* begin_;
  const uint8_t* const end_;
  uint64_t buffer_ = 0;
  int buffer_len_ = 0;
  bool ok_ = true;
};
